:root {
  --base-padding: clamp(1rem, 2vw, 3rem);
}

/* Small phones (portrait) */
@media (max-width: 479px) { 
  :root {
    --space-sm: 8px;
    --space-md: 16px;
  }
}

/* Phones (landscape & larger) */
@media (min-width: 480px) { }

/* Tablets */
@media (min-width: 768px) { }

/* Small desktops */
@media (min-width: 1024px) { 
  :root {
    --space-sm: 16px;
    --space-md: 32px;
  }
}

/* Medium desktops / HD */
@media (min-width: 1280px) { }

/* Large desktops / 2K+ */
@media (min-width: 1536px) { }

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

*, *::before, *::after {
  box-sizing: border-box;
  border: 0;
}

* {
  margin: 0;
  line-height: calc(1em + 0.5rem);
}

html {
  font-size: 100%; /* Usually 16px, good for rem scaling */
  font-family: system-ui, sans-serif;
  scroll-behavior: smooth;
}

body {
  font-size: clamp(1rem, 1vw + 0.5rem, 1.25rem);
  -webkit-font-smoothing: antialiased;
  /* padding: var(--base-padding); ci change this via styled-components*/
}

#root, #__next {
  isolation: isolate;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}
input, button, select {
  cursor: pointer;
}
button:disabled {
  cursor: not-allowed;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word; 
}

p {
  text-wrap: pretty;
}
h1, h2, h3, h4, h5, h6 {
  text-wrap: balance;
  margin-bottom: clamp(0.25em, 0.25em + 0.5vw, 0.5em);
}

ul, ol {
  list-style: none;
  padding: 0;
}

a {
  text-decoration: none;
  color: inherit;
}